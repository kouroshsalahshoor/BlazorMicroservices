@page "/"

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <p>Welcome, @userName</p>
        </Authorized>
        <NotAuthorized>
            <p>Not Authorized (Not signed in!)</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code{
    [Inject] public AuthenticationStateProvider _authenticationStateProvider { get; set; }
    [Inject] public ProtectedLocalStorage _protectedLocalStorage { get; set; }
    private string userName = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        var authstate = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var userNameClaim = authstate.User.Claims.SingleOrDefault(x => x.Type == "UserName");
        if (userNameClaim is not null)
        {
            userName = userNameClaim!.Value;
        }

        //getting current userDetails from localsorage
        var result = await _protectedLocalStorage.GetAsync<UserDto>(SD.UserDetails);
        var userDto = result.Success ? result.Value : null;
    }
}